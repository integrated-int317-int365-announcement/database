apiVersion: apps/v1
kind: Deployment
metadata:
  name: annms-dbms-{{ .Values.env }}
  namespace: annms-{{ .Values.env }}
  labels:
    app: annms-dbms-{{ .Values.env }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: annms-dbms-{{ .Values.env }}
  template:
    metadata:
      labels:
        app: annms-dbms-{{ .Values.env }}
    spec:
      containers:
      - name: annms-dbms-{{ .Values.env }}
        image: {{ .Values.mysqlServer.image }}
        {{- if .Values.mysqlServer.envValues }}
        env:
        {{- range $key, $value := .Values.mysqlServer.envValues }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        ports:
        - containerPort: 3306
        volumeMounts:
          - name: mysql-init-database
            mountPath: /shell
          - name: mysql-init-privileges
            mountPath: /docker-entrypoint-initdb.d
        # lifecycle:
        #   postStart:
        #     exec:
        command: ["/bin/bash","-c", "/shell/init-database.sh"]
        # args: ["-c", "/shell/init-database.sh"]
      volumes:
      - name: mysql-init-database
        configMap:
          name: init-databse
          defaultMode: 0777     
      - name: mysql-init-privileges
        configMap:
          name: init-privileges
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-databse
data:
  init-database.sh: |-
    {{ .Values.mysqlServer.database }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-privileges
data:
  init-privileges.sql: |-
    {{ .Values.mysqlServer.user }}
---
apiVersion: v1
kind: Service
metadata:
  name: annms-dbms-{{ .Values.env }}-svc
  namespace: annms-{{ .Values.env }}
spec:
  type: ClusterIP
  ports:
  - port: 3306
  selector:
    app: annms-dbms-{{ .Values.env }}